//----------------------------------------------------------------------------------------------------------------------------------/
//question 5
int fib(int i){
    if(i==0|i==1){
        return i;
    }
    else{
        return (fib(i-2)+fib(i-1));
    }
}
int main() {
    // Write C++ code here
    int x;
    cout<<"enter the number of terms you need"<<endl;
    int t=0;
    cin>>x;
    cout<<"the fibbonacci series: "<<endl;
    while(t<x){
        cout<<" "<<fib(t);
        t++;
    }
    

    return 0;
}



/-----------------------------------------------------------------------------------------------------------------------------------/
//question6
void towerOfHonoi(int n,char source , char auxillary, char destination){
    if(n>0){
    towerOfHonoi(n-1,source,destination,auxillary);
    cout<<source<<" "<<destination<<endl;
    towerOfHonoi(n-1,auxillary,source,destination);
    }
   
    
}
int main(){
    cout<<"the number of disks:";
    int x;
    cin>>x;
    towerOfHonoi(x,'a','b','c');
    return 0;
}

/-------------------------------------------------------------------------------------------------------------------------------------/
// Online C++ compiler to run C++ program online
#include <iostream>
using namespace std;
//question 7
//binary search
 int helper(int arr[],int l,int r,int find){
    if(r>=l){
    int mid=(l+r)/2;
    if(arr[mid]==find){
        return mid;
    }
    else if(arr[mid]>find){
        return helper(arr,l,mid-1,find);
        
    }
    else{
        return helper(arr,mid+1,r,find);
    }
    }
   
    return -1;
    
}
int binarysearch(int arr[],int length,int element){
    int k=helper(arr,0,length-1,element);
    return k;
}

int main(){
    cout<<"size of array"<<endl;
    int size,y;
    cin>>size;
    int input[10000];
    for(int i=0;i<size;i++){
        cout<<"element at index"<<i<<"is:";
        cin>>input[i];
    }
    cout<<"write the number to be written"<<endl;
    cin>>y;
    int f=binarysearch(input,size,y);
    cout<<"element found at:"<<f;
    
    
    
}
/---------------------------------------------------------------------------------------------------------------------------------/
//bubble sort
int main(){
    int n;
    cout<<"enter the size of arry";
    cin>>n;
    int arr[n];
      
    for(int i=0;i<n;i++){
        cout<<"value at index"<<i<<"is:";
        cin>>arr[i];
    }
    int counter=1;
    while(counter<n){
        for(int i=0;i<n-counter;i++){
            if(arr[i]>arr[i+1]){
                int temp=arr[i];
                arr[i]=arr[i+1];
                arr[i+1]=temp;
            }
        }
        counter++;
    }

    cout<<"sorted array";
    for(int i=0;i<n;i++){
        cout<<arr[i]<<",";
    }
    
}

/-------------------------------------------------------------------------------------------------------------------------------/
//insertion sort 
//question 9
int main(){
    int n;
    cout<<"number of elements";
    cin>>n;
    int arr[n];
    for(int i=0;i<n;i++){
        cout<<"element at index"<<i<<"is:";
        cin>>arr[i];
    }
    for(int i=1;i<n;i++){
        int current=arr[i];
        int j=i-1;
        while(arr[j]>current && j>=0){
            arr[j+1]=arr[j];
            j--;
        }
        arr[j+1]=current;
        
        
    }
    
    
     for(int i=1;i<n;i++){
        cout<<arr[i]<<",";
     }
     
    return 0;
}
/---------------------------------------------------------------------------------------------------------------------------/
/question10
#include <iostream>
#include <string.h>
using namespace std;
void helper(string input,int l,int r)
{
    if (l == r)
        cout<<input<<endl;
    else
    {
        for (int i = l; i <= r; i++){
        swap(input[l], input[i]);
        helper(input, l+1, r);
        swap(input[l], input[i]);
        }
    }
}
void printPermutations(string input){
    int l=0;
    int r=input.size()-1;
    helper(input,l,r);
}
int main() {
    string input;
    cin >> input;
    printPermutations(input);
    return 0;
}